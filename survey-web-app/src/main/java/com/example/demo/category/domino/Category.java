package com.example.demo.category.domino;

// default package
// Generated 21 sep 2020 7:34:12 by Hibernate Tools 5.1.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.example.demo.question.dominio.Question;
import com.example.demo.survey.dominio.Survey;
import com.example.demo.util.dominio.Views;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonView;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * Category generated by hbm2java
 */
@Entity
@Table(name = "category", catalog = "encuesta")
public class Category implements java.io.Serializable {

	@JsonView(Views.User.class)
	private int categoryId;
	
	private Survey survey;
	
	@JsonView(Views.User.class)
	private String categoryName;
	
	@JsonView(Views.User.class)
	private Set<Question> questions = new HashSet<Question>(0);

	public Category() {
	}

	public Category(Survey survey, String categoryName) {
		this.survey = survey;
		this.categoryName = categoryName;
	}

	public Category(Survey survey, String categoryName, Set<Question> questions) {
		this.survey = survey;
		this.categoryName = categoryName;
		this.questions = questions;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "CategoryID", unique = true, nullable = false)
	public int getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(int categoryId) {
		this.categoryId = categoryId;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "survey_SurveyID", nullable = false)
	public Survey getSurvey() {
		return this.survey;
	}

	public void setSurvey(Survey survey) {
		this.survey = survey;
	}


	@Column(name = "CategoryName", nullable = false, length = 45)
	public String getCategoryName() {
		return this.categoryName;
	}

	public void setCategoryName(String categoryName) {
		this.categoryName = categoryName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "category")
	public Set<Question> getQuestions() {
		return this.questions;
	}

	public void setQuestions(Set<Question> questions) {
		this.questions = questions;
	}

}
